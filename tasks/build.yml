---

- name: Ensure install folders
  become: yes
  become_user: "{{ kafka.user }}"
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ kafka.user }}"
    group: "{{ kafka.group }}"
    mode: 0755
  with_items:
    - "{{ kafka.conf_dir }}"
    - "{{ kafka.app_dir }}"
    - "{{ kafka.data_dir }}"
    - "{{ kafka.log_dir }}"
    - "{{ kafka.tarball_location }}"



- name: Fetch kafka binary package
  become: yes
  get_url:
    dest: "{{ kafka.tarball_location }}/kafka_{{ kafka.version_scala }}-{{ kafka.version_kafka }}.tgz"
    url: "{{ kafka.apache_mirror }}/kafka/{{ kafka.version_kafka }}/kafka_{{ kafka.version_scala }}-{{ kafka.version_kafka }}.tgz"

- name: Uncompress the kafka tar
  become: yes
  unarchive:
    copy: no
    creates: "{{ kafka.tarball_location }}/kafka_{{ kafka.version_scala }}-{{ kafka.version_kafka }}"
    dest: "{{ kafka.tarball_location }}}"
    src: "{{ kafka.tarball_location }}/kafka_{{ kafka.version_scala }}-{{ kafka.version_kafka }}.tgz"

- name: Link kafka to the right version
  become: yes
  file:
    path: "{{ kafka.app_dir }}"
    src: "{{ kafka.tarball_location }}/kafka_{{ kafka.version_scala }}-{{ kafka.version_kafka }}"
    state: link

- name: link config dir
  become: yes
  file:
    force: yes
    path: "{{ kafka.conf_dir }}"
    src: "{{ kafka.app_dir }}/config"
    state: link

- name: create systemd config
  become: yes
  template: dest=/etc/systemd/system/kafka.service owner=root group=root mode=644 src=kafka.service.j2
  notify:
    - restart kafka

# - name: Create Kafka service
#   become: yes
#   template:
#     dest: "{{ kafka.upstart_conf }}"
#     owner: root
#     mode: 0644
#     src: kafka.conf.j2
#   notify:
#     - restart kafka
    
- name: Ensure Kafka runs on boot
  become: yes
  service:
    enabled: yes
    name: kafka
